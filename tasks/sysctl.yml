---
# best practices from various sources:
# https://success.docker.com/article/node-using-swap-memory-instead-of-host-memory
# https://blog.codeship.com/running-1000-containers-in-docker-swarm/
# https://github.com/clemenko/best_practices/

- name: "Update sysctl settings"
  sysctl:
    sysctl_file: "/etc/sysctl.d/90-docker.conf"
    state: present
    name: "{{ item.name }}"
    value: "{{ item.value }}"
  loop:
  # prevents swapping out apps for disk cache
  # this can reduce performance of filesystem intensive apps
  - { name: "vm.swappiness",                                      value: "0" }
  - { name: "vm.overcommit_memory",                               value: "1" }
  # increase the number of ports for creating connections
  - { name: "net.ipv4.ip_local_port_range",                       value: "16084 60999" }
  # reused closed sockets faster
  - { name: "net.ipv4.tcp_tw_reuse",                              value: "1" }
  - { name: "net.ipv4.tcp_fin_timeout",                           value: "15" }
  # allow more backlogged connections
  - { name: "net.core.somaxconn",                                 value: "4096" }
  - { name: "net.core.netdev_max_backlog",                        value: "4096" }
  # up to 16M per socket, rarely ever gets that high
  - { name: "net.core.rmem_max",                                  value: "16777216" }
  - { name: "net.core.wmem_max",                                  value: "16777216" }
  # networking tunables
  - { name: "net.ipv4.tcp_max_syn_backlog",                       value: "20480" }
  - { name: "net.ipv4.tcp_max_tw_buckets",                        value: "400000" }
  - { name: "net.ipv4.tcp_no_metrics_save",                       value: "1" }
  - { name: "net.ipv4.tcp_rmem",                                  value: "4096 87380 16777216" }
  - { name: "net.ipv4.tcp_syn_retries",                           value: "2" }
  - { name: "net.ipv4.tcp_synack_retries",                        value: "2" }
  - { name: "net.ipv4.tcp_wmem",                                  value: "4096 65536 16777216" }
  # increase thresholds on connection tracking to prevent drops
  # note some settings reduced from defaults, may improve connection recycling
  - { name: "net.netfilter.nf_conntrack_max",                     value: "262144", default: "65536" }
  - { name: "net.netfilter.nf_conntrack_generic_timeout",         value: "120",    default: "600" }
  - { name: "net.netfilter.nf_conntrack_tcp_timeout_established", value: "86400",  default: "432000" }
  # increasing arp cache size
  - { name: "net.ipv4.neigh.default.gc_thresh1",                  value: "8096" }
  - { name: "net.ipv4.neigh.default.gc_thresh2",                  value: "12288" }
  - { name: "net.ipv4.neigh.default.gc_thresh3",                  value: "16384" }
  # enable TCP keepalive
  - { name: "net.ipv4.tcp_keepalive_time",                        value: "600" }
  # force IP forwarding (should already be on)
  - { name: "net.ipv4.ip_forward",                                value: "1" }
  # monitor filesystem events
  - { name: "fs.inotify.max_user_instances",                      value: "8192" }
  - { name: "fs.inotify.max_user_watches",                        value: "1048576" }

# Distribution specific settings

# RH for host mounts
- name: "RHEL: fs.may_detach_mounts"
  sysctl:
    sysctl_file: "/etc/sysctl.d/90-docker.conf"
    name: "fs.may_detach_mounts"
    value: "1"
    state: present
  when:
  - "ansible_os_family == 'RedHat'"
  - "ansible_distribution_version >= 7.4"


